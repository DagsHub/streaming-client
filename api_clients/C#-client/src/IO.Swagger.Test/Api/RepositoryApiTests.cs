/* 
 * DagsHub API
 *
 * This API is used to interact with DagsHub. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RepositoryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RepositoryApiTests
    {
        private RepositoryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RepositoryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RepositoryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RepositoryApi
            //Assert.IsInstanceOfType(typeof(RepositoryApi), instance, "instance is a RepositoryApi");
        }

        /// <summary>
        /// Test CreateOrgRepo
        /// </summary>
        [Test]
        public void CreateOrgRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgname = null;
            //CreateRepo body = null;
            //instance.CreateOrgRepo(orgname, body);
            
        }
        /// <summary>
        /// Test CreateRepo
        /// </summary>
        [Test]
        public void CreateRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRepo body = null;
            //instance.CreateRepo(body);
            
        }
        /// <summary>
        /// Test ListMyRepos
        /// </summary>
        [Test]
        public void ListMyReposTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListMyRepos();
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        /// <summary>
        /// Test ListOrgRepos
        /// </summary>
        [Test]
        public void ListOrgReposTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgname = null;
            //instance.ListOrgRepos(orgname);
            
        }
        /// <summary>
        /// Test ListUserRepos
        /// </summary>
        [Test]
        public void ListUserReposTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.ListUserRepos(username);
            
        }
        /// <summary>
        /// Test MigrateRepo
        /// </summary>
        [Test]
        public void MigrateRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MigrateRepo body = null;
            //instance.MigrateRepo(body);
            
        }
        /// <summary>
        /// Test Search
        /// </summary>
        [Test]
        public void SearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string q = null;
            //int? uid = null;
            //int? limit = null;
            //int? page = null;
            //var response = instance.Search(q, uid, limit, page);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
    }

}
