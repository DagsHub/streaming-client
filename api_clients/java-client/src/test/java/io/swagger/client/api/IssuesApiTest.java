/*
 * DagsHub API
 * This API is used to interact with DagsHub. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.Issue;
import io.swagger.client.model.Issues;
import io.swagger.client.model.PatchIssue;
import io.swagger.client.model.PostIssue;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for IssuesApi
 */
@Ignore
public class IssuesApiTest {

    private final IssuesApi api = new IssuesApi();

    /**
     * Create an issue
     *
     * Any user with read access to a repository can create an issue.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createIssueTest() throws Exception {
        String owner = null;
        String repo = null;
        PostIssue body = null;
        Issue response = api.createIssue(owner, repo, body);

        // TODO: test validations
    }
    /**
     * Edit an issue
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void editIssueTest() throws Exception {
        String owner = null;
        String repo = null;
        PatchIssue body = null;
        Issue response = api.editIssue(owner, repo, body);

        // TODO: test validations
    }
    /**
     * Get a single issue
     *
     * This endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a pull_request key.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIssueTest() throws Exception {
        String owner = null;
        String repo = null;
        Integer index = null;
        Issue response = api.getIssue(owner, repo, index);

        // TODO: test validations
    }
    /**
     * List issues for a repository
     *
     * This endpoint may also return pull requests in the response. If an issue is a pull request, the object will include a pull_request key.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listRepoIssuesTest() throws Exception {
        String owner = null;
        String repo = null;
        Issues response = api.listRepoIssues(owner, repo);

        // TODO: test validations
    }
}
