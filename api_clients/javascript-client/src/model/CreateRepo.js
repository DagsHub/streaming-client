/*
 * DagsHub API
 * This API is used to interact with DagsHub. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CreateRepo model module.
 * @module model/CreateRepo
 * @version 1.0.0
 */
export class CreateRepo {
  /**
   * Constructs a new <code>CreateRepo</code>.
   * @alias module:model/CreateRepo
   * @class
   * @param name {String} name of the repository
   */
  constructor(name) {
    this.name = name;
  }

  /**
   * Constructs a <code>CreateRepo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateRepo} obj Optional instance to populate.
   * @return {module:model/CreateRepo} The populated <code>CreateRepo</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateRepo();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('private'))
        obj._private = ApiClient.convertToType(data['private'], 'Boolean');
      if (data.hasOwnProperty('auto_init'))
        obj.autoInit = ApiClient.convertToType(data['auto_init'], 'Boolean');
      if (data.hasOwnProperty('gitignores'))
        obj.gitignores = ApiClient.convertToType(data['gitignores'], 'String');
      if (data.hasOwnProperty('license'))
        obj.license = ApiClient.convertToType(data['license'], 'String');
      if (data.hasOwnProperty('readme'))
        obj.readme = ApiClient.convertToType(data['readme'], 'String');
    }
    return obj;
  }
}

/**
 * name of the repository
 * @member {String} name
 */
CreateRepo.prototype.name = undefined;

/**
 * A short description of the repository
 * @member {String} description
 */
CreateRepo.prototype.description = undefined;

/**
 * Either true to create a private repository, or false to create a public one.
 * @member {Boolean} _private
 * @default false
 */
CreateRepo.prototype._private = false;

/**
 * Pass true to create an initial commit with README, .gitignore and LICENSE.
 * @member {Boolean} autoInit
 * @default false
 */
CreateRepo.prototype.autoInit = false;

/**
 * Desired language .gitignore templates to apply. Use the name of the templates.
 * @member {String} gitignores
 */
CreateRepo.prototype.gitignores = undefined;

/**
 * Allowed values for the <code>license</code> property.
 * @enum {String}
 * @readonly
 */
CreateRepo.LicenseEnum = {
  /**
   * value: "Apache License 2.0"
   * @const
   */
  apacheLicense20: "Apache License 2.0",

  /**
   * value: "MIT License"
   * @const
   */
  mITLicense: "MIT License",

  /**
   * value: "Abstyles License"
   * @const
   */
  abstylesLicense: "Abstyles License",

  /**
   * value: "Academic Free License v1.1"
   * @const
   */
  academicFreeLicenseV11: "Academic Free License v1.1",

  /**
   * value: "Academic Free License v1.2"
   * @const
   */
  academicFreeLicenseV12: "Academic Free License v1.2",

  /**
   * value: "Academic Free License v2.0"
   * @const
   */
  academicFreeLicenseV20: "Academic Free License v2.0",

  /**
   * value: "Academic Free License v2.1"
   * @const
   */
  academicFreeLicenseV21: "Academic Free License v2.1",

  /**
   * value: "Academic Free License v3.0"
   * @const
   */
  academicFreeLicenseV30: "Academic Free License v3.0",

  /**
   * value: "Affero General Public License v1.0"
   * @const
   */
  afferoGeneralPublicLicenseV10: "Affero General Public License v1.0",

  /**
   * value: "Apache License 1.0"
   * @const
   */
  apacheLicense10: "Apache License 1.0",

  /**
   * value: "Apache License 1.1"
   * @const
   */
  apacheLicense11: "Apache License 1.1",

  /**
   * value: "Artistic License 1.0"
   * @const
   */
  artisticLicense10: "Artistic License 1.0",

  /**
   * value: "Artistic License 2.0"
   * @const
   */
  artisticLicense20: "Artistic License 2.0",

  /**
   * value: "BSD 2-clause License"
   * @const
   */
  bSD2ClauseLicense: "BSD 2-clause License",

  /**
   * value: "BSD 3-clause License"
   * @const
   */
  bSD3ClauseLicense: "BSD 3-clause License",

  /**
   * value: "BSD 4-clause License"
   * @const
   */
  bSD4ClauseLicense: "BSD 4-clause License",

  /**
   * value: "Creative Commons CC0 1.0 Universal"
   * @const
   */
  creativeCommonsCC010Universal: "Creative Commons CC0 1.0 Universal",

  /**
   * value: "Eclipse Public License 1.0"
   * @const
   */
  eclipsePublicLicense10: "Eclipse Public License 1.0",

  /**
   * value: "Educational Community License v1.0"
   * @const
   */
  educationalCommunityLicenseV10: "Educational Community License v1.0",

  /**
   * value: "Educational Community License v2.0"
   * @const
   */
  educationalCommunityLicenseV20: "Educational Community License v2.0",

  /**
   * value: "GNU Affero General Public License v3.0"
   * @const
   */
  gNUAfferoGeneralPublicLicenseV30: "GNU Affero General Public License v3.0",

  /**
   * value: "GNU Free Documentation License v1.1"
   * @const
   */
  gNUFreeDocumentationLicenseV11: "GNU Free Documentation License v1.1",

  /**
   * value: "GNU Free Documentation License v1.2"
   * @const
   */
  gNUFreeDocumentationLicenseV12: "GNU Free Documentation License v1.2",

  /**
   * value: "GNU Free Documentation License v1.3"
   * @const
   */
  gNUFreeDocumentationLicenseV13: "GNU Free Documentation License v1.3",

  /**
   * value: "GNU General Public License v1.0"
   * @const
   */
  gNUGeneralPublicLicenseV10: "GNU General Public License v1.0",

  /**
   * value: "GNU General Public License v2.0"
   * @const
   */
  gNUGeneralPublicLicenseV20: "GNU General Public License v2.0",

  /**
   * value: "GNU General Public License v3.0"
   * @const
   */
  gNUGeneralPublicLicenseV30: "GNU General Public License v3.0",

  /**
   * value: "GNU Lesser General Public License v2.1"
   * @const
   */
  gNULesserGeneralPublicLicenseV21: "GNU Lesser General Public License v2.1",

  /**
   * value: "GNU Lesser General Public License v3.0"
   * @const
   */
  gNULesserGeneralPublicLicenseV30: "GNU Lesser General Public License v3.0",

  /**
   * value: "GNU Library General Public License v2.0"
   * @const
   */
  gNULibraryGeneralPublicLicenseV20: "GNU Library General Public License v2.0",

  /**
   * value: "ISC license"
   * @const
   */
  iSCLicense: "ISC license",

  /**
   * value: "Mozilla Public License 1.0"
   * @const
   */
  mozillaPublicLicense10: "Mozilla Public License 1.0",

  /**
   * value: "Mozilla Public License 1.1"
   * @const
   */
  mozillaPublicLicense11: "Mozilla Public License 1.1",

  /**
   * value: "Mozilla Public License 2.03"
   * @const
   */
  mozillaPublicLicense203: "Mozilla Public License 2.03"
};
/**
 * Desired LICENSE template to apply. Use the name of the template.
 * @member {module:model/CreateRepo.LicenseEnum} license
 */
CreateRepo.prototype.license = undefined;

/**
 * Desired README template to apply. Use the name of the template.
 * @member {String} readme
 * @default 'Default'
 */
CreateRepo.prototype.readme = 'Default';

