/*
 * DagsHub API
 * This API is used to interact with DagsHub. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The WebhookConfig model module.
 * @module model/WebhookConfig
 * @version 1.0.0
 */
export class WebhookConfig {
  /**
   * Constructs a new <code>WebhookConfig</code>.
   * Key/value pairs to provide settings for this hook
   * @alias module:model/WebhookConfig
   * @class
   * @param url {String} A string defining the URL to which the payloads will be delivered.
   * @param contentType {module:model/WebhookConfig.ContentTypeEnum} A string defining the media type used to serialize the payloads.
   */
  constructor(url, contentType) {
    this.url = url;
    this.contentType = contentType;
  }

  /**
   * Constructs a <code>WebhookConfig</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WebhookConfig} obj Optional instance to populate.
   * @return {module:model/WebhookConfig} The populated <code>WebhookConfig</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new WebhookConfig();
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('content_type'))
        obj.contentType = ApiClient.convertToType(data['content_type'], 'String');
      if (data.hasOwnProperty('secret'))
        obj.secret = ApiClient.convertToType(data['secret'], 'String');
    }
    return obj;
  }
}

/**
 * A string defining the URL to which the payloads will be delivered.
 * @member {String} url
 */
WebhookConfig.prototype.url = undefined;

/**
 * Allowed values for the <code>contentType</code> property.
 * @enum {String}
 * @readonly
 */
WebhookConfig.ContentTypeEnum = {
  /**
   * value: "json"
   * @const
   */
  json: "json",

  /**
   * value: "form"
   * @const
   */
  form: "form"
};
/**
 * A string defining the media type used to serialize the payloads.
 * @member {module:model/WebhookConfig.ContentTypeEnum} contentType
 */
WebhookConfig.prototype.contentType = undefined;

/**
 * An optional string that's passed with the HTTP requests body.
 * @member {String} secret
 */
WebhookConfig.prototype.secret = undefined;

